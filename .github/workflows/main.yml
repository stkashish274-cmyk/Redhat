name: Continuous OpenShift VM Watchdog

on:
  workflow_dispatch:   # allows manual start only (runs forever after start)

jobs:
  watchdog:
    runs-on: self-hosted

    steps:
      - name: Setup environment
        run: |
          echo "üß∞ Installing required tools..."
          sudo apt-get update -y
          sudo apt-get install -y curl jq

          # Install oc
          if ! command -v oc &>/dev/null; then
            echo "üì¶ Installing OpenShift CLI..."
            curl -L https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-linux.tar.gz -o oc.tar.gz
            tar -xzf oc.tar.gz
            sudo mv oc /usr/local/bin/
            sudo chmod +x /usr/local/bin/oc
          fi

          # Install virtctl
          if ! command -v virtctl &>/dev/null; then
            echo "üì¶ Installing virtctl..."
            curl -L -o virtctl https://github.com/kubevirt/kubevirt/releases/download/v1.5.2/virtctl-v1.5.2-linux-amd64
            chmod +x virtctl
            sudo mv virtctl /usr/local/bin/
          fi

      - name: Start Continuous Watchdog
        env:
          OPENSHIFT_API_URL: ${{ secrets.OPENSHIFT_API_URL }}
          OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          VM_NAME="centos-stream9-tan-flea-48"
          NS="stkcyber-dev"
          INTERVAL=600  # 10 minutes

          echo "üêæ Starting continuous OpenShift VM watchdog..."
          oc login --token="$OPENSHIFT_TOKEN" --server="$OPENSHIFT_API_URL" --insecure-skip-tls-verify
          oc project "$NS"

          while true; do
            echo "‚è∞ Checking VM status at $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            STATUS=$(oc get vm "$VM_NAME" -n "$NS" -o jsonpath='{.status.printableStatus}' 2>/dev/null || echo "Unknown")

            if [ "$STATUS" != "Running" ]; then
              echo "‚ö†Ô∏è VM is not running (status: $STATUS). Restarting now..."
              virtctl stop "$VM_NAME" -n "$NS" || echo "Stop skipped."
              sleep 10
              virtctl start "$VM_NAME" -n "$NS"

              echo "üîÑ Waiting 30s for restart..."
              sleep 30

              STATUS=$(oc get vm "$VM_NAME" -n "$NS" -o jsonpath='{.status.printableStatus}' 2>/dev/null || echo "Unknown")
              echo "üì° New status: $STATUS"

              MSG="‚ö†Ô∏è VM *$VM_NAME* was restarted. Current status: *$STATUS*"
              COLOR=15158332
            else
              echo "‚úÖ VM is running normally."
              MSG="‚úÖ VM *$VM_NAME* is running normally."
              COLOR=3066993
            fi

            # Send Discord alert every cycle (or only on restart if you prefer)
            curl -H "Content-Type: application/json" \
                 -X POST \
                 -d "{\"embeds\":[{\"title\":\"OpenShift VM Watchdog\",\"description\":\"$MSG\",\"color\":$COLOR,\"footer\":{\"text\":\"$(date -u '+%Y-%m-%d %H:%M:%S UTC')\"}}]}" \
                 "$DISCORD_WEBHOOK_URL" || true

            echo "üí§ Sleeping for $INTERVAL seconds..."
            sleep "$INTERVAL"
          done
